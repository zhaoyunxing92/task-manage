<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />
    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/spring.log}"/>
    <include resource="org/springframework/boot/logging/logback/console-appender.xml" />
    <appender name="TIME_FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <file>${LOG_FILE}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <maxHistory>365</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>1MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="TIME_FILE" />
    </root>
    <!--<include resource="org/springframework/boot/logging/logback/base.xml" />
    <logger name="org.springframework.web" level="INFO" additivity="false"/>

    &lt;!&ndash;文件输出的格式设置 &ndash;&gt;
    <appender name="file"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        &lt;!&ndash; 日志日常打印文件 &ndash;&gt;
        <file>logs/log.log</file>
        &lt;!&ndash; 配置日志所生成的目录以及生成文件名的规则 在logs/log-2017-06-31.0.log.zip &ndash;&gt;
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/log-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            &lt;!&ndash; 如果按天来回滚，则最大保存时间为365天，365天之前的都将被清理掉 &ndash;&gt;
            <maxHistory>365</maxHistory>
            &lt;!&ndash; 日志总保存量为10GB &ndash;&gt;
            <totalSizeCap>10GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                &lt;!&ndash;文件达到 最大128MB时会被压缩和切割 &ndash;&gt;
                <maxFileSize>1MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>


        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        &lt;!&ndash; 文件输出的日志 的格式 &ndash;&gt;
        <encoder>
            <pattern>
                %d{yy-MM-dd HH:mm:ss} [%5p] %c{1}:%L - %m%n
            </pattern>
            <charset>UTF-8</charset> &lt;!&ndash; 此处设置字符集 &ndash;&gt;
        </encoder>
        &lt;!&ndash; Safely log to the same file from multiple JVMs. Degrades performance! &ndash;&gt;
        <prudent>false</prudent>
    </appender>

     &lt;!&ndash;控制台&ndash;&gt;
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        &lt;!&ndash; 控制台输出的日志 的格式 &ndash;&gt;
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss} [%5p] %c{1}:%L - %m%n
            </pattern>
            <charset>UTF-8</charset> &lt;!&ndash; 此处设置字符集 &ndash;&gt;
        </encoder>
        &lt;!&ndash; 只是DEBUG级别以上的日志才显示 &ndash;&gt;
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
    </appender>

    &lt;!&ndash; 测试环境+开发环境. 多个使用逗号隔开. &ndash;&gt;
    <springProfile name="test,dev">
        &lt;!&ndash;
         当然如果你把 additivity="false" 改成 additivity="true" 的话，就会打印两次，因为打印信息向上级传递，logger本身打印一次，root接到后又打印一次。
        &ndash;&gt;
        <logger name="com.sunny.task.controller" level="DEBUG" additivity="false"/>
        <logger name="com.sunny.task.mapper" level="DEBUG" additivity="false"/>
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="file"/>
        </root>
    </springProfile>
    &lt;!&ndash; 生产环境. &ndash;&gt;
    <springProfile name="prod">
        <logger name="com.sunny.task.controller" level="INFO" additivity="false"/>
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="file"/>
        </root>
    </springProfile>
    &lt;!&ndash;
  参考链接：http://www.jb51.net/article/118849.htm
   root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性。
   level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。
   默认是DEBUG。
   可以包含零个或多个元素，标识这个appender将会添加到这个loger。
   &ndash;&gt;
-->
   
</configuration>
